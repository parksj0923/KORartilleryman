알고리즘 공부

1.깊이 우선 탐색(DFS,Depth-First Search),너비 우선 탐색(BFS,Breadth-First Search)
    그래프 : 정점과 간선으로 이루어진 자료구조의 일종 , G=(V,E)
    
    그래프 탐색 : 하나의 정점으로부터 시작하여 차례대로 모든 정점들을 한 번씩 방문하는 것
    ex>특정 도시에서 다른 도시로 갈 수 있는지 없는지, 특정 단자와 단자가 서로 연결되어 있는지 없는지
    
    1.DFS(깊이 우선 탐색)
        -루트 노드(혹은 다른 임의의 노드)에서 시작해서 다음 분기(branch)로 넘어가기 전에 해당 분기를 완벽하게 탐색하는 방법
        -넓게 탐색하기 전에 깊게 탐색함
        -모든 노드를 방문하고자 하는 경우 이방법 선택
        -DFS가 BFS보다 간단함
        -속도는 BFS에 비해 느림
        -특징
            -자기 자신을 호출하는 순환 알고리즘의 형태를 지님
            -가장 큰 차이점은 그래프 탐색의 경우 어떤 노드를 방문했었는지 여부를 반드시 검사해야함
             (검사하지 않으면 무한루프 빠질 수 있음)
        -시간 복잡도
            -DFS는 그래프(정점수:N,간선의수:E)의 모든 간선을 조회함
                인접행렬로 표현된 그래프 : O(N^2)
                인접리스트로 표현된 그래프: O(N+E)
    2.BFS(너비 우선 탐색)
        -루트 노드(혹은 다른 임의의 노드)에서 시작해서 인접한 노드를 먼저 탐색하는 방법
        -깊게 탐색하기 전에 넓게 탐색
        -두 노드 사이의 최단 경로 혹은 임의의 경로를 찾고 싶을 때 이 방법 선택
        -특징
            -BFS는 재귀적으로 동작하지 않는다
            -방문한 노드들을 차례로 저장한 후 꺼낼 수 있는 자료 구조인 큐를 사용함
            -즉 선입선출(FIFO)원칙으로 탐색
        -파이썬 구현 방식
            -1.탐색을 위한 큐, 방문한 노드를 체크해 둘 리스트 생성
            -2.탐색을 시작할 노드를 큐에 넣기(탐색 시작 노드를 체크 리스트에 넣기)
            -3.큐가 빌때까지 반복문 수행
                -1.큐의 앞에서부터 노드를 하나씩 꺼내기
                -2.꺼낸 노드에 인접한 노드들을 방문하는 반복문 수행
                    -1.방문한 노드가 이전에 방문한 적이 없다면 큐에넣기
                    -2.방문한 노드는 체크하기
                    


2.탐욕 알고리즘 (greedy algorithm)
    동적 프로그래밍 사용시 지나치게 많은 일을 한다는 것에서 착안하여 고안된 알고리즘
    
    미래를 생각하지 않고 각 단계에서 가장 최선의 선택을 하는 기법 
    
    -강의실 선택문제

                
